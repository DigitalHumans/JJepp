인라인 함수

인라인의 의미는 함수에 묶인 내용의 명령어들을 가장 구식의 방법인 복붙 삽입하는 것과 원리가 같다.
그러나 그러한 작업을 하나의 이름을 가진 함수로써 묶어주기에 편라하다.

이러한 인라인 함수는 함수이면서도 새로운 루틴을 생성하지 않음으로 스택에
지역 변수
형식 매개 변수
임시 변수
반환 주소
등을 생성하지 않고 프로그램 코드 영역에 일반적인 코드로 구현될 것이다.

따라서 스택에 하무가 구현되는 함수 호출시간과 스택의 여유 공간을 절약할 수 있다.



함수 포인터
시스템에 따라 다르를 수 있으나
함수는 스택에서 작동하지만 함수의 원형을 담은 코드는 프로그램 코드 영역에 코드로써 저장된다.

이러한 입력의 파라메터 형식과 리턴 타입이 같은 경우 함수의 이름만 바꿔실행해도 
결괏값만 다를뿐 문법상의 오류는 없다는 원리를 활용하는 방법과 비슷하다.

함수의 이름은 함수가 저장된 위치를를 가리키기위한 역할을 한다.
즉 함수의 위치를 가라킨키는 포인터(주소값)만 전달하는 역할인 것이다.

이때 주소값(상수 포인터)중  함수의 위치를 가리키는 것이 함수 포인터이다.

코드에서 함수를 "함수이름();" 처럼 사용하면 함수이지만 
함수의 이름만 사용하는 것은 배열의 이름처럼 첫머리 주소를 나타내는 함수 포인터 값이다.

그리고 함수 포인터 변수를 생성하여 함수 포인터 변수에 함수 상수 포인터를 대입하고 
()로써 디레퍼런싱하여 함수 포인터 개념을 활용한다.





-함수포인터의 구현
함수포인터 원형을 선언하면 함수포인터 주소가 변수로써 메모리 공간이 할당이 된다.

그리고 포인터 변수에 대입 가능하도록 파라메터 형식과 리턴 타입이 같은 함수를 1개 이상 선언한다.

함수 포인터 변수를 선언한다.

void (*ptr_func)(int, int);

[예제]
-http://www.tcpschool.com/cpp/cpp_function_pointer


함수 이름만을 활용하여 함수 포인터 변수로써 활용하고
다른 함수의 이름으로 함수 상수 포인터를 함수 포인터 변수에 대입연산한다.

대입연산 이후 함수 포인터의 이름에 ()를 붙여

함수포인터이름();

을 실행하면 함수 포인터 변수에 대입된 함수 상수 포인터가 가리키는 함수가 대입되어 실행된다.



람다
모던 C++ 에 기본 기능으로 추가된 것으로 C(99), c(98) 등에는 라이브러리를 추가하여야 사용할 수 있다.






에 대해 정리하여 올리기