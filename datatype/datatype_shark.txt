<<<정수형>>>
int
short
long
long long

정수형 범위
-2^( ( (바이트 크기) * 8 ) - 1) ~ 2^( ( (바이트 크기) * 8 ) - 1 ) - 1 (정수형 공통)

int (4바이트)
integer의 줄임말
현대의 64비트 환경 -> 4바이트
가장 빨리 처리할 수 있는 크기를 주로 사용
첫 비트를 부호비트로 사용
-2^31 ~ 2^31 - 1

short (2바이트)
-2^15 ~ 2^15 - 1

long (4바이트)
64비트 *NIX에서는 8바이트
표준에서는 최소 바이트만 지정하기 때문
4바이트 : -2^31 ~ 2^31 - 1
8바이트 : -2^63 ~ 2^63 - 1

long long (8바이트)
-2^63 ~ 2^63 - 1


<<<실수형>>>
float
double

진수부와 가수부로 구분
가수부 : 유효숫자, 진수부 : 지수
부호 비트, 진수부, 가수부 순으로 구성

float (4바이트)
3.4 * 10^(+-38)
유효 숫자 : 6자리

double (8바이트)
1.7 * 10^(+-308)
유효 숫자 : 15자리



<<<문자형>>>
char (8바이트)
부호     -128~127
부호X       0~255
패리티      0~127

<<<문자열<<<
string : <string>, std

string을 사용하기 위한 조건
#include<string>
using namespace std;

고정된 크기 X --> 프로그램 실행 과정에서 유동적으로 바뀜



<<<boolean algebr (불 대수)>>>
bool : 0,1 만을 저장 -> 크기가 지정X (VS에서 1byte인 경우가 많음)



<<<변수,상수>>>
signed    : 부호O (-)
unsigned : 부호X (0)

int, signed int -> 같은 타입
unsigned int : 0~2^((크기)*8)-1
(정수에만 있음)

<변수선언 방법>

int a; // 쓰레기 값이 있을 수 있으니 대입 필수!
int b=13;
inc c{13};

string str1;
string str2="hello";
string str3{"Hello"};

unsigned char ch ='A';
long long l = 13l; // l은 대소문자 구분이 없음
float f = 1.3f;      // f는 대소문자 구분 없음
double d=1.3     // 그냥 쓰면 됨


<상수>
const -> 메모리에 저장
constexpr -> 컴파일 시 변환
constexpr double pi=3.14159268358979;